{"ast":null,"code":"var _jsxFileName = \"/Users/win/modern-react-bootcamp/section-24-colour-palette/src/PaletteFormNavbar.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport classNames from \"classnames\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Fab from '@material-ui/core/Fab';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nconst drawerWidth = 500;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  flexDirection: 'row',\n  justifyContent: 'space-between',\n  height: '64px',\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20\n  },\n  navButtons: {}\n});\n\nclass PaletteFormNavbar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newPaletteName: ''\n    };\n\n    this.paletteChangeHandler = evt => {\n      this.setState({\n        [evt.target.name]: evt.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    ValidatorForm.addValidationRule(\"isPaletteNameUnique\", value => this.props.palettes.every(({\n      paletteName\n    }) => paletteName.toLowerCase() !== value.toLowerCase()));\n  }\n\n  render() {\n    const {\n      classes,\n      open,\n      savePaletteHandler,\n      handleDrawerOpen\n    } = this.props;\n    const {\n      newPaletteName\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AppBar, {\n      position: \"fixed\",\n      color: \"default\",\n      className: classNames(classes.appBar, {\n        [classes.appBarShift]: open\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      disableGutters: !open,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      color: \"inherit\",\n      \"aria-label\": \"Open drawer\",\n      onClick: handleDrawerOpen,\n      className: classNames(classes.menuButton, open && classes.hide),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MenuIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      color: \"inherit\",\n      noWrap: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, \"Create Your Own Palette\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.navButons,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ValidatorForm, {\n      onSubmit: () => savePaletteHandler(newPaletteName),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      label: \"Palette Name\",\n      value: newPaletteName,\n      name: \"newPaletteName\",\n      onChange: this.paletteChangeHandler,\n      validators: ['required', 'isPaletteNameUnique'],\n      errorMessages: ['Enter a palette name', 'Palette name must be unique'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Fab, {\n      variant: \"extended\",\n      color: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, \"Save Palette\")), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Fab, {\n      variant: \"extended\",\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, \"Go Back\")))));\n  }\n\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(PaletteFormNavbar);","map":{"version":3,"sources":["/Users/win/modern-react-bootcamp/section-24-colour-palette/src/PaletteFormNavbar.js"],"names":["React","Component","Link","withStyles","classNames","CssBaseline","AppBar","Toolbar","Typography","IconButton","MenuIcon","Fab","ValidatorForm","TextValidator","drawerWidth","styles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","flexDirection","justifyContent","height","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","navButtons","PaletteFormNavbar","state","newPaletteName","paletteChangeHandler","evt","setState","target","name","value","componentDidMount","addValidationRule","props","palettes","every","paletteName","toLowerCase","render","classes","open","savePaletteHandler","handleDrawerOpen","hide","navButons","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport classNames from \"classnames\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Fab from '@material-ui/core/Fab';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\n\nconst drawerWidth = 500;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  flexDirection: 'row',\n  justifyContent: 'space-between',\n  height: '64px',\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20\n  },\n  navButtons: {}  \n});\n\nclass PaletteFormNavbar extends Component {\n  state = { newPaletteName: '' }\n  \n  componentDidMount() {\n    ValidatorForm.addValidationRule(\"isPaletteNameUnique\", value =>\n    this.props.palettes.every(\n      ({ paletteName }) => paletteName.toLowerCase() !== value.toLowerCase()\n      )\n    );\n  }\n\n  paletteChangeHandler = (evt) => {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n\n  render() {\n    \n    const { classes, open, savePaletteHandler, handleDrawerOpen } = this.props;\n    const { newPaletteName } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position='fixed'\n          color='default'\n          className={classNames(classes.appBar, {\n            [classes.appBarShift]: open\n          })}\n        >\n          <Toolbar disableGutters={!open}>\n            <IconButton\n              color='inherit'\n              aria-label='Open drawer'\n              onClick={handleDrawerOpen}\n              className={classNames(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant='h6' color='inherit' noWrap>\n              Create Your Own Palette\n            </Typography>  \n          </Toolbar>\n            <div className={classes.navButons}>\n              <ValidatorForm onSubmit={() => savePaletteHandler(newPaletteName)}>\n              <TextValidator \n                label='Palette Name' \n                value={newPaletteName}\n                name='newPaletteName' \n                onChange={this.paletteChangeHandler}\n                validators={['required', 'isPaletteNameUnique']}\n                errorMessages={['Enter a palette name', 'Palette name must be unique']}\n                />\n              <Fab variant='extended' color='primary' type='submit'>Save Palette</Fab>\n              </ValidatorForm>\n              <Link to='/'>\n                <Fab variant='extended' color='secondary'>Go Back</Fab>\n              </Link>\n            </div>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, {withTheme: true})(PaletteFormNavbar);"]},"metadata":{},"sourceType":"module"}