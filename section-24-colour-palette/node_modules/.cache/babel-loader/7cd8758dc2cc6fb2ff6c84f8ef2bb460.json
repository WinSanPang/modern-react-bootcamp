{"ast":null,"code":"var _jsxFileName = \"/Users/win/modern-react-bootcamp/section-24-colour-palette/src/SingleColourPalette.js\";\nimport React, { Component } from 'react';\nimport ColourBox from './ColourBox';\n\nclass SingleColourPalette extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.colourShadesHandler = (palette, colourToFilterBy) => {\n      let shades = [];\n      let allColours = palette.colors;\n\n      for (let key in allColours) {\n        shades = shades.concat(allColours[key].filter(colour => colour.id === colourToFilterBy));\n      }\n\n      return shades.slice(1);\n    };\n\n    this.state = {\n      shades: this.colourShadesHandler(this.props.palette, this.props.colourId)\n    };\n  }\n\n  render() {\n    const colourBoxes = this.state.shades.map(colour => /*#__PURE__*/React.createElement(ColourBox, {\n      key: colour.id,\n      name: colour.name,\n      colour: colour.hex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, \"SingleColourPalette\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, colourBoxes));\n  }\n\n}\n\nexport default SingleColourPalette;","map":{"version":3,"sources":["/Users/win/modern-react-bootcamp/section-24-colour-palette/src/SingleColourPalette.js"],"names":["React","Component","ColourBox","SingleColourPalette","colourShadesHandler","palette","colourToFilterBy","shades","allColours","colors","key","concat","filter","colour","id","slice","state","props","colourId","render","colourBoxes","map","name","hex"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,mBAAN,SAAkCF,SAAlC,CAA4C;AAAA;AAAA;;AAAA,SAC1CG,mBAD0C,GACpB,CAACC,OAAD,EAAUC,gBAAV,KAA+B;AACnD,UAAIC,MAAM,GAAG,EAAb;AACA,UAAIC,UAAU,GAAGH,OAAO,CAACI,MAAzB;;AAEA,WAAK,IAAIC,GAAT,IAAgBF,UAAhB,EAA4B;AAC1BD,QAAAA,MAAM,GAAGA,MAAM,CAACI,MAAP,CACPH,UAAU,CAACE,GAAD,CAAV,CAAgBE,MAAhB,CAAuBC,MAAM,IAAIA,MAAM,CAACC,EAAP,KAAcR,gBAA/C,CADO,CAAT;AAGD;;AACD,aAAOC,MAAM,CAACQ,KAAP,CAAa,CAAb,CAAP;AACD,KAXyC;;AAAA,SAa1CC,KAb0C,GAalC;AACNT,MAAAA,MAAM,EAAE,KAAKH,mBAAL,CAAyB,KAAKa,KAAL,CAAWZ,OAApC,EAA6C,KAAKY,KAAL,CAAWC,QAAxD;AADF,KAbkC;AAAA;;AAiB1CC,EAAAA,MAAM,GAAG;AACP,UAAMC,WAAW,GAAG,KAAKJ,KAAL,CAAWT,MAAX,CAAkBc,GAAlB,CAAsBR,MAAM,iBAC9C,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,MAAM,CAACC,EAAvB;AAA2B,MAAA,IAAI,EAAED,MAAM,CAACS,IAAxC;AAA8C,MAAA,MAAM,EAAET,MAAM,CAACU,GAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADkB,CAApB;AAGA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,WADH,CAFF,CADF;AAQD;;AA7ByC;;AAgC5C,eAAejB,mBAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport ColourBox from './ColourBox';\n\nclass SingleColourPalette extends Component {\n  colourShadesHandler = (palette, colourToFilterBy) => {\n    let shades = [];\n    let allColours = palette.colors;\n\n    for (let key in allColours) {\n      shades = shades.concat(\n        allColours[key].filter(colour => colour.id === colourToFilterBy)\n      );\n    }\n    return shades.slice(1);\n  }\n\n  state = {\n    shades: this.colourShadesHandler(this.props.palette, this.props.colourId)\n  }\n\n  render() {\n    const colourBoxes = this.state.shades.map(colour => (\n      <ColourBox key={colour.id} name={colour.name} colour={colour.hex}/>\n    ))\n    return (\n      <div>\n        <h1>SingleColourPalette</h1>\n        <div>\n          {colourBoxes}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SingleColourPalette;"]},"metadata":{},"sourceType":"module"}