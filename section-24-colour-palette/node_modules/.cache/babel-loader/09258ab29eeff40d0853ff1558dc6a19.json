{"ast":null,"code":"var _jsxFileName = \"/Users/win/modern-react-bootcamp/section-24-colour-palette/src/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport seedColors from './seedsColors';\nimport { generatePalette } from './colorHelpers';\nimport Palette from './Palette';\nimport PaletteList from './PaletteList';\nimport SingleColorPalette from './SingleColorPalette';\nimport NewPaletteForm from './NewPaletteForm';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport Page from './Page';\nconst savedPalettes = JSON.parse(window.localStorage.getItem('palettes'));\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      palettes: savedPalettes || seedColors\n    };\n\n    this.findPalette = id => {\n      return this.state.palettes.find(function (palette) {\n        return palette.id === id;\n      });\n    };\n\n    this.deletePaletteHandler = id => {\n      this.setState(st => ({\n        palettes: st.palettes.filter(palette => palette.id !== id)\n      }), this.syncLocalStorageHandler);\n    };\n\n    this.savePaletteHandler = newPalette => {\n      this.setState({\n        palettes: [...this.state.palettes, newPalette]\n      }, this.syncLocalStorageHandler);\n    };\n\n    this.syncLocalStorageHandler = () => {\n      window.localStorage.setItem('palettes', JSON.stringify(this.state.palettes));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Route, {\n      render: ({\n        location\n      }) => /*#__PURE__*/React.createElement(TransitionGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CSSTransition, {\n        key: location.key,\n        classNames: \"fade\",\n        timeout: 500,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        location: location,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/palette/new\",\n        render: routeProps => /*#__PURE__*/React.createElement(Page, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(NewPaletteForm, Object.assign({\n          savePalette: this.savePaletteHandler\n        }, routeProps, {\n          palettes: this.state.palettes,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 19\n          }\n        }))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: routeProps => /*#__PURE__*/React.createElement(Page, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(PaletteList, Object.assign({\n          palettes: this.state.palettes,\n          deletePaletteHandler: this.deletePaletteHandler\n        }, routeProps, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 19\n          }\n        }))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/palette/:id\",\n        render: routeProps => /*#__PURE__*/React.createElement(Page, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Palette, {\n          palette: generatePalette(this.findPalette(routeProps.match.params.id)),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 19\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/palette/:paletteId/:colorId\",\n        render: routeProps => /*#__PURE__*/React.createElement(Page, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(SingleColorPalette, {\n          colorId: routeProps.match.params.colorId,\n          palette: generatePalette(this.findPalette(routeProps.match.params.paletteId)),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 19\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }\n      })))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/win/modern-react-bootcamp/section-24-colour-palette/src/App.js"],"names":["React","Component","Route","Switch","seedColors","generatePalette","Palette","PaletteList","SingleColorPalette","NewPaletteForm","TransitionGroup","CSSTransition","Page","savedPalettes","JSON","parse","window","localStorage","getItem","App","state","palettes","findPalette","id","find","palette","deletePaletteHandler","setState","st","filter","syncLocalStorageHandler","savePaletteHandler","newPalette","setItem","stringify","render","location","key","routeProps","match","params","colorId","paletteId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport './App.css';\nimport seedColors from './seedsColors';\nimport { generatePalette } from './colorHelpers';\nimport Palette from './Palette';\nimport PaletteList from './PaletteList';\nimport SingleColorPalette from './SingleColorPalette';\nimport NewPaletteForm from './NewPaletteForm';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport Page from './Page';\n\nconst savedPalettes = JSON.parse(window.localStorage.getItem('palettes'));\n\nclass App extends Component {\n  state = {\n    palettes: savedPalettes || seedColors\n  };\n\n  findPalette = (id) => {\n    return this.state.palettes.find(function(palette) {\n      return palette.id === id;\n    });\n  }\n\n  deletePaletteHandler = (id) => {\n    this.setState(\n      st => ({palettes: st.palettes.filter(palette => palette.id !== id)}),\n      this.syncLocalStorageHandler\n    )\n  }\n\n  savePaletteHandler = (newPalette) => {\n    this.setState({palettes: [...this.state.palettes, newPalette]},\n      this.syncLocalStorageHandler);\n  }\n\n  syncLocalStorageHandler = () => {\n    window.localStorage.setItem('palettes', JSON.stringify(this.state.palettes));\n  }\n\n  render() {\n    return (\n      <Route render={({location}) => (\n        <TransitionGroup>\n          <CSSTransition key={location.key} classNames='fade' timeout={500}>\n            <Switch location={location}>\n              <Route exact path='/palette/new' render={routeProps => (\n                <Page>\n                  <NewPaletteForm savePalette={this.savePaletteHandler} {...routeProps} palettes={this.state.palettes}/>\n                </Page>\n              )}/>\n              <Route exact path='/' render={(routeProps) => (\n                <Page>\n                  <PaletteList palettes={this.state.palettes} deletePaletteHandler={this.deletePaletteHandler} {...routeProps}/>\n                </Page>\n              )}/>\n              <Route exact path='/palette/:id' render={routeProps => (\n                <Page>\n                  <Palette \n                    palette={generatePalette(\n                      this.findPalette(routeProps.match.params.id)\n                      )}\n                    />\n                </Page>\n              )}/>\n              <Route exact path='/palette/:paletteId/:colorId' render={routeProps => (\n                <Page>\n                  <SingleColorPalette \n                    colorId={routeProps.match.params.colorId}\n                    palette={generatePalette(\n                      this.findPalette(routeProps.match.params.paletteId)\n                      )}\n                  />\n                </Page>\n              )}/>\n            </Switch>\n          </CSSTransition>\n        </TransitionGroup>\n      )}/>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}