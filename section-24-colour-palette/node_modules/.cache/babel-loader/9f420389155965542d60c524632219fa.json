{"ast":null,"code":"var _jsxFileName = \"/Users/win/modern-react-bootcamp/section-24-colour-palette/src/ColorPickerForm.js\";\nimport React, { Component } from 'react';\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport Fab from '@material-ui/core/Fab';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { ChromePicker } from 'react-color';\nimport { arrayMove } from 'react-sortable-hoc';\nimport PaletteFormNavbar from './PaletteFormNavbar';\nimport DraggableColourList from './DraggableColorList';\n\nclass ColorPickerForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentColor: 'skyblue'\n    };\n\n    this.updateCurrentColorHandler = newColor => {\n      this.setState({\n        currentColor: newColor.hex\n      });\n    };\n  }\n\n  render() {\n    const {\n      paletteIsFull\n    } = this.props;\n    const {\n      currentColor\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ChromePicker, {\n      color: currentColor,\n      onChangeComplete: this.updateCurrentColorHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ValidatorForm, {\n      onSubmit: this.addNewColorHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      value: colorName,\n      name: \"colorName\",\n      onChange: this.paletteChangeHandler,\n      validators: ['required', 'isColorUnique', 'isColorNameUnique'],\n      errorMessages: ['Enter a color name', 'Color is already used', 'Color name must be unique'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Fab, {\n      variant: \"extended\",\n      type: \"submit\",\n      color: \"primary\",\n      style: {\n        backgroundColor: paletteIsFull ? 'grey' : currentColor\n      },\n      disabled: paletteIsFull,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, paletteIsFull ? 'Palette Full' : 'Add Color')));\n  }\n\n}\n\nexport default ColorPickerForm;","map":{"version":3,"sources":["/Users/win/modern-react-bootcamp/section-24-colour-palette/src/ColorPickerForm.js"],"names":["React","Component","classNames","withStyles","Drawer","Typography","Divider","IconButton","ChevronLeftIcon","Fab","ValidatorForm","TextValidator","ChromePicker","arrayMove","PaletteFormNavbar","DraggableColourList","ColorPickerForm","state","currentColor","updateCurrentColorHandler","newColor","setState","hex","render","paletteIsFull","props","addNewColorHandler","colorName","paletteChangeHandler","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,kCAA7C;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AAEA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,mBAAP,MAAgC,sBAAhC;;AAEA,MAAMC,eAAN,SAA8Bf,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACtCgB,KADsC,GAC9B;AACNC,MAAAA,YAAY,EAAE;AADR,KAD8B;;AAAA,SAKtCC,yBALsC,GAKTC,QAAD,IAAc;AACxC,WAAKC,QAAL,CAAc;AAAEH,QAAAA,YAAY,EAAEE,QAAQ,CAACE;AAAzB,OAAd;AACD,KAPqC;AAAA;;AAStCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAoB,KAAKC,KAA/B;AACA,UAAM;AAAEP,MAAAA;AAAF,QAAmB,KAAKD,KAA9B;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AACI,MAAA,KAAK,EAAEC,YADX;AAEI,MAAA,gBAAgB,EAAE,KAAKC,yBAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAII,oBAAC,aAAD;AAAe,MAAA,QAAQ,EAAE,KAAKO,kBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,aAAD;AACE,MAAA,KAAK,EAAEC,SADT;AAEE,MAAA,IAAI,EAAC,WAFP;AAGE,MAAA,QAAQ,EAAE,KAAKC,oBAHjB;AAIE,MAAA,UAAU,EAAE,CAAC,UAAD,EAAa,eAAb,EAA8B,mBAA9B,CAJd;AAKE,MAAA,aAAa,EAAE,CAAC,oBAAD,EAAuB,uBAAvB,EAAgD,2BAAhD,CALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE,oBAAC,GAAD;AACA,MAAA,OAAO,EAAC,UADR;AAEA,MAAA,IAAI,EAAC,QAFL;AAGA,MAAA,KAAK,EAAC,SAHN;AAIA,MAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAEL,aAAa,GAAG,MAAH,GAAYN;AAA5C,OAJP;AAKA,MAAA,QAAQ,EAAEM,aALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGA,aAAa,GAAG,cAAH,GAAoB,WAPpC,CARF,CAJJ,CADF;AAyBD;;AAtCqC;;AAyCxC,eAAeR,eAAf","sourcesContent":["import React, { Component } from 'react';\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport Fab from '@material-ui/core/Fab';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { ChromePicker } from 'react-color';\nimport { arrayMove } from 'react-sortable-hoc';\n\nimport PaletteFormNavbar from './PaletteFormNavbar'\nimport DraggableColourList from './DraggableColorList';\n\nclass ColorPickerForm extends Component {\n  state = {\n    currentColor: 'skyblue',\n  }\n\n  updateCurrentColorHandler = (newColor) => {\n    this.setState({ currentColor: newColor.hex});\n  }\n  \n  render() {\n    const { paletteIsFull } = this.props;\n    const { currentColor } = this.state;\n\n    return (\n      <div>\n        <ChromePicker \n            color={currentColor} \n            onChangeComplete={this.updateCurrentColorHandler}/>\n          <ValidatorForm onSubmit={this.addNewColorHandler}>\n            <TextValidator \n              value={colorName} \n              name='colorName'\n              onChange={this.paletteChangeHandler}\n              validators={['required', 'isColorUnique', 'isColorNameUnique']}\n              errorMessages={['Enter a color name', 'Color is already used', 'Color name must be unique']}\n              />\n            <Fab \n            variant='extended'\n            type='submit' \n            color='primary'\n            style={{ backgroundColor: paletteIsFull ? 'grey' : currentColor}}\n            disabled={paletteIsFull}\n            >\n              {paletteIsFull ? 'Palette Full' : 'Add Color'}\n            </Fab>\n          </ValidatorForm>\n      </div>\n    );\n  }\n}\n\nexport default ColorPickerForm;"]},"metadata":{},"sourceType":"module"}