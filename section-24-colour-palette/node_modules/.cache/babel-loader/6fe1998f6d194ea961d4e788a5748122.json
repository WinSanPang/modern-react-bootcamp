{"ast":null,"code":"import chroma from 'chroma-js';\nconst levels = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900];\n\nfunction generatePalette(starterPalette) {\n  let newPalette = {\n    paletteName: starterPalette.paletteName,\n    id: starterPalette.id,\n    emoji: starterPalette.emoji,\n    colors: {}\n  };\n\n  for (let level of levels) {\n    newPalette.colors[level] = [];\n  }\n\n  for (let color of starterPalette.colors) {\n    let scale = getScale(color.color, 10).reverse();\n\n    for (let i in scale) {\n      newPalette.colors[levels[i]].push({\n        name: `${color.name} ${levels[i]}`,\n        id: color.name.toLowerCase().replace(/ /g, '-'),\n        hex: scale[i],\n        rgb: chroma(scale[i]).css(),\n        rgba: chroma(scale[i]).css().replace('rgb', 'rgba').replace(')', ',1.0)')\n      });\n    }\n  }\n\n  return newPalette;\n}\n\nfunction getRange(hexColor) {\n  const end = '#fff';\n  return [chroma(hexColor).darken(1.4).hex(), hexColor, end];\n}\n\nfunction getScale(hexColor, numberofColors) {\n  return chroma.scale(getRanger(hexColor)).mode('lab').colors(numberofColors);\n}\n\nexport { generatePalette };","map":{"version":3,"sources":["/Users/win/modern-react-bootcamp/section-24-colour-palette/src/colourHelpers.js"],"names":["chroma","levels","generatePalette","starterPalette","newPalette","paletteName","id","emoji","colors","level","color","scale","getScale","reverse","i","push","name","toLowerCase","replace","hex","rgb","css","rgba","getRange","hexColor","end","darken","numberofColors","getRanger","mode"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,WAAnB;AAEA,MAAMC,MAAM,GAAG,CAAC,EAAD,EAAK,GAAL,EAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,GAAzB,EAA8B,GAA9B,EAAmC,GAAnC,EAAwC,GAAxC,EAA6C,GAA7C,CAAf;;AAEA,SAASC,eAAT,CAAyBC,cAAzB,EAAwC;AACtC,MAAIC,UAAU,GAAG;AACfC,IAAAA,WAAW,EAAEF,cAAc,CAACE,WADb;AAEfC,IAAAA,EAAE,EAAEH,cAAc,CAACG,EAFJ;AAGfC,IAAAA,KAAK,EAAEJ,cAAc,CAACI,KAHP;AAIfC,IAAAA,MAAM,EAAE;AAJO,GAAjB;;AAMA,OAAI,IAAIC,KAAR,IAAiBR,MAAjB,EAAwB;AACtBG,IAAAA,UAAU,CAACI,MAAX,CAAkBC,KAAlB,IAA2B,EAA3B;AACD;;AAED,OAAI,IAAIC,KAAR,IAAiBP,cAAc,CAACK,MAAhC,EAAuC;AACrC,QAAIG,KAAK,GAAGC,QAAQ,CAACF,KAAK,CAACA,KAAP,EAAc,EAAd,CAAR,CAA0BG,OAA1B,EAAZ;;AACA,SAAI,IAAIC,CAAR,IAAaH,KAAb,EAAmB;AACjBP,MAAAA,UAAU,CAACI,MAAX,CAAkBP,MAAM,CAACa,CAAD,CAAxB,EAA6BC,IAA7B,CAAkC;AAChCC,QAAAA,IAAI,EAAG,GAAEN,KAAK,CAACM,IAAK,IAAGf,MAAM,CAACa,CAAD,CAAI,EADD;AAEhCR,QAAAA,EAAE,EAAEI,KAAK,CAACM,IAAN,CAAWC,WAAX,GAAyBC,OAAzB,CAAiC,IAAjC,EAAuC,GAAvC,CAF4B;AAGhCC,QAAAA,GAAG,EAAER,KAAK,CAACG,CAAD,CAHsB;AAIhCM,QAAAA,GAAG,EAAEpB,MAAM,CAACW,KAAK,CAACG,CAAD,CAAN,CAAN,CAAiBO,GAAjB,EAJ2B;AAKhCC,QAAAA,IAAI,EAAEtB,MAAM,CAACW,KAAK,CAACG,CAAD,CAAN,CAAN,CACHO,GADG,GAEHH,OAFG,CAEK,KAFL,EAEY,MAFZ,EAGHA,OAHG,CAGK,GAHL,EAGU,OAHV;AAL0B,OAAlC;AAUD;AACF;;AACD,SAAOd,UAAP;AACD;;AAED,SAASmB,QAAT,CAAkBC,QAAlB,EAA4B;AAC1B,QAAMC,GAAG,GAAG,MAAZ;AACA,SAAO,CACLzB,MAAM,CAACwB,QAAD,CAAN,CACGE,MADH,CACU,GADV,EAEGP,GAFH,EADK,EAIHK,QAJG,EAKHC,GALG,CAAP;AAOD;;AAED,SAASb,QAAT,CAAkBY,QAAlB,EAA4BG,cAA5B,EAA2C;AACzC,SAAO3B,MAAM,CACVW,KADI,CACEiB,SAAS,CAACJ,QAAD,CADX,EAEJK,IAFI,CAEC,KAFD,EAGJrB,MAHI,CAGGmB,cAHH,CAAP;AAID;;AAED,SAASzB,eAAT","sourcesContent":["import chroma from 'chroma-js';\n\nconst levels = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900];\n\nfunction generatePalette(starterPalette){\n  let newPalette = {\n    paletteName: starterPalette.paletteName,\n    id: starterPalette.id,\n    emoji: starterPalette.emoji,\n    colors: {}\n  };\n  for(let level of levels){\n    newPalette.colors[level] = [];\n  }\n  \n  for(let color of starterPalette.colors){\n    let scale = getScale(color.color, 10).reverse();\n    for(let i in scale){\n      newPalette.colors[levels[i]].push({\n        name: `${color.name} ${levels[i]}`,\n        id: color.name.toLowerCase().replace(/ /g, '-'),\n        hex: scale[i],\n        rgb: chroma(scale[i]).css(),\n        rgba: chroma(scale[i])\n          .css()\n          .replace('rgb', 'rgba')\n          .replace(')', ',1.0)')\n      })\n    }\n  }\n  return newPalette;\n}\n\nfunction getRange(hexColor) {\n  const end = '#fff';\n  return [\n    chroma(hexColor)\n      .darken(1.4)\n      .hex(),\n      hexColor,\n      end\n  ];\n}\n\nfunction getScale(hexColor, numberofColors){\n  return chroma\n    .scale(getRanger(hexColor))\n    .mode('lab')\n    .colors(numberofColors);\n}\n\nexport { generatePalette }"]},"metadata":{},"sourceType":"module"}