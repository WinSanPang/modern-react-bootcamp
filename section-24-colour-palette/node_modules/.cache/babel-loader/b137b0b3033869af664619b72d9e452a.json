{"ast":null,"code":"var _jsxFileName = \"/Users/win/modern-react-bootcamp/section-24-colour-palette/src/ColourBox.js\";\nimport React, { Component } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Link } from 'react-router-dom';\nimport chroma from 'chroma-js';\nimport { withStyles } from '@material-ui/styles';\nimport './ColourBox.css';\nconst styles = {\n  copyText: {\n    color: props => chroma(props.background).luminance() >= 0.07 ? 'black' : 'white'\n  },\n  colourNameText: {\n    color: props => chroma(props.background).luminance() <= 0.07 ? 'white' : 'black'\n  }\n};\n\nclass ColourBox extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      copied: false\n    };\n\n    this.copyStateHandler = () => {\n      this.setState({\n        copied: true\n      }, () => {\n        setTimeout(() => this.setState({\n          copied: false\n        }), 2200);\n      });\n    };\n  }\n\n  render() {\n    const {\n      name,\n      background,\n      moreUrl,\n      showLink,\n      classes\n    } = this.props;\n    const {\n      copied\n    } = this.state;\n    const isDarkColour = chroma(background).luminance() <= 0.08;\n    const isLightColour = chroma(background).luminance() >= 0.07;\n    return /*#__PURE__*/React.createElement(CopyToClipboard, {\n      text: background,\n      onCopy: this.copyStateHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ColourBox\",\n      style: {\n        background\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `ColourBox__CopyOverlay ${copied && 'Show'}`,\n      style: {\n        background\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: `ColourBox__CopyMessage ${copied && 'Show'}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, \"Copied!\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.copyText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, background)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ColourBox__CopyContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ColourBox__BoxContent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: isDarkColour ? 'ColourBox__LightText' : undefined,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, name)), /*#__PURE__*/React.createElement(\"button\", {\n      className: `ColourBox__CopyButton ${isLightColour ? 'ColourBox__DarkText' : undefined}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, \"COPY\")), showLink && /*#__PURE__*/React.createElement(Link, {\n      to: moreUrl,\n      onClick: e => e.stopPropagation(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `ColourBox__SeeMore ${isLightColour ? 'ColourBox__DarkText' : undefined}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, \"MORE\"))));\n  }\n\n}\n\nexport default withStyles(styles)(ColourBox);","map":{"version":3,"sources":["/Users/win/modern-react-bootcamp/section-24-colour-palette/src/ColourBox.js"],"names":["React","Component","CopyToClipboard","Link","chroma","withStyles","styles","copyText","color","props","background","luminance","colourNameText","ColourBox","state","copied","copyStateHandler","setState","setTimeout","render","name","moreUrl","showLink","classes","isDarkColour","isLightColour","undefined","e","stopPropagation"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Link } from 'react-router-dom';\nimport chroma from 'chroma-js';\nimport { withStyles } from '@material-ui/styles';\n\nimport './ColourBox.css';\n\nconst styles = {\n  copyText: {\n    color: props => chroma(props.background).luminance() >= 0.07 ? 'black' : 'white',\n    },\n  colourNameText: {\n    color: props => chroma(props.background).luminance() <= 0.07 ? 'white' : 'black',\n  }\n};\n\nclass ColourBox extends Component {\n  state = {\n    copied: false\n  }\n\n  copyStateHandler = () => {\n    this.setState({ copied: true}, () => {\n      setTimeout(() => this.setState({copied: false}), 2200);\n    });\n  }\n\n  render() {\n    const { name, background, moreUrl, showLink, classes} = this.props;\n    const { copied } = this.state;\n    const isDarkColour = chroma(background).luminance() <= 0.08;\n    const isLightColour = chroma(background).luminance() >= 0.07;\n\n    return (\n        <CopyToClipboard text={background} onCopy={this.copyStateHandler}>\n          <div \n            className='ColourBox' \n            style={{ background }}>\n            <div \n              className={`ColourBox__CopyOverlay ${copied && 'Show'}`} \n              style={{ background }}/>\n            <div className={`ColourBox__CopyMessage ${copied && 'Show'}`}>\n              <h1>Copied!</h1>\n              <p className={classes.copyText}>\n                {background}\n              </p>\n            </div>\n            <div className='ColourBox__CopyContainer'>\n              <div className='ColourBox__BoxContent'>\n                <span className={isDarkColour ? 'ColourBox__LightText' : undefined}>{name}</span>\n              </div>\n              <button className={`ColourBox__CopyButton ${isLightColour ? 'ColourBox__DarkText' : undefined}`}>COPY</button>  \n            </div>\n            {showLink && (\n              <Link to={moreUrl} onClick={e => e.stopPropagation()}>\n                <span className={`ColourBox__SeeMore ${isLightColour ? 'ColourBox__DarkText' : undefined}`}>MORE</span></Link>\n            )}\n          </div>\n        </CopyToClipboard>\n    );\n  }\n}\n\nexport default withStyles(styles)(ColourBox);"]},"metadata":{},"sourceType":"module"}