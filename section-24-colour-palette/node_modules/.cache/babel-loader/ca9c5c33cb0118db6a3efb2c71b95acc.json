{"ast":null,"code":"var _jsxFileName = \"/Users/win/modern-react-bootcamp/section-24-colour-palette/src/PaletteFormNavbar.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport Fab from '@material-ui/core/Fab';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { ChromePicker } from 'react-color';\nimport { arrayMove } from 'react-sortable-hoc';\n\nclass PaletteFormNavbar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newPaletteName: ''\n    };\n\n    this.paletteChangeHandler = evt => {\n      this.setState({\n        [evt.target.name]: evt.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    ValidatorForm.addValidationRule(\"isPaletteNameUnique\", value => this.props.palettes.every(({\n      paletteName\n    }) => paletteName.toLowerCase() !== value.toLowerCase()));\n  }\n\n  render() {\n    const {\n      classes,\n      open,\n      savePaletteHandler,\n      handleDrawerOpen\n    } = this.props;\n    const {\n      newPaletteName\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AppBar, {\n      position: \"fixed\",\n      color: \"default\",\n      className: classNames(classes.appBar, {\n        [classes.appBarShift]: open\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      disableGutters: !open,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      color: \"inherit\",\n      \"aria-label\": \"Open drawer\",\n      onClick: handleDrawerOpen,\n      className: classNames(classes.menuButton, open && classes.hide),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MenuIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      color: \"inherit\",\n      noWrap: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, \"Create Your Own Palette\"), /*#__PURE__*/React.createElement(ValidatorForm, {\n      onSubmit: () => savePaletteHandler(newPaletteName),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      label: \"Palette Name\",\n      value: newPaletteName,\n      name: \"newPaletteName\",\n      onChange: this.paletteChangeHandler,\n      validators: ['required', 'isPaletteNameUnique'],\n      errorMessages: ['Enter a palette name', 'Palette name must be unique'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Fab, {\n      variant: \"extended\",\n      color: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, \"Save Palette\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Fab, {\n      variant: \"extended\",\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, \"Go Back\"))))));\n  }\n\n}\n\nexport default PaletteFormNavbar;","map":{"version":3,"sources":["/Users/win/modern-react-bootcamp/section-24-colour-palette/src/PaletteFormNavbar.js"],"names":["React","Component","Link","classNames","withStyles","Drawer","CssBaseline","AppBar","Toolbar","Typography","Divider","IconButton","MenuIcon","ChevronLeftIcon","Fab","ValidatorForm","TextValidator","ChromePicker","arrayMove","PaletteFormNavbar","state","newPaletteName","paletteChangeHandler","evt","setState","target","name","value","componentDidMount","addValidationRule","props","palettes","every","paletteName","toLowerCase","render","classes","open","savePaletteHandler","handleDrawerOpen","appBar","appBarShift","menuButton","hide"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport Fab from '@material-ui/core/Fab';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { ChromePicker } from 'react-color';\nimport { arrayMove } from 'react-sortable-hoc';\n\nclass PaletteFormNavbar extends Component {\n  state = { newPaletteName: '' }\n  \n  componentDidMount() {\n    ValidatorForm.addValidationRule(\"isPaletteNameUnique\", value =>\n    this.props.palettes.every(\n      ({ paletteName }) => paletteName.toLowerCase() !== value.toLowerCase()\n      )\n    );\n  }\n\n  paletteChangeHandler = (evt) => {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n\n  render() {\n    \n    const { classes, open, savePaletteHandler, handleDrawerOpen } = this.props;\n    const { newPaletteName } = this.state;\n\n    return (\n      <div>\n        <CssBaseline />\n        <AppBar\n          position='fixed'\n          color='default'\n          className={classNames(classes.appBar, {\n            [classes.appBarShift]: open\n          })}\n        >\n          <Toolbar disableGutters={!open}>\n            <IconButton\n              color='inherit'\n              aria-label='Open drawer'\n              onClick={handleDrawerOpen}\n              className={classNames(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant='h6' color='inherit' noWrap>\n              Create Your Own Palette\n            </Typography>\n            <ValidatorForm onSubmit={() => savePaletteHandler(newPaletteName)}>\n            <TextValidator \n              label='Palette Name' \n              value={newPaletteName}\n              name='newPaletteName' \n              onChange={this.paletteChangeHandler}\n              validators={['required', 'isPaletteNameUnique']}\n              errorMessages={['Enter a palette name', 'Palette name must be unique']}\n              />\n            <Fab variant='extended' color='primary' type='submit'>Save Palette</Fab>\n            <Link to='/'>\n              <Fab variant='extended' color='secondary'>Go Back</Fab>\n            </Link>\n            </ValidatorForm>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nexport default PaletteFormNavbar;"]},"metadata":{},"sourceType":"module"}