{"ast":null,"code":"var _jsxFileName = \"/Users/win/modern-react-bootcamp/section-34-context-intro/src/Navbar.js\";\nimport React, { useContext } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Switch from '@material-ui/core/Switch';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles/NavbarStyles';\nimport { ThemeContext } from './contexts/ThemeContext';\nimport { LanguageContext } from './contexts/LanguageContext';\nconst content = {\n  english: {\n    search: 'Search',\n    flag: 'üá¨üáß'\n  },\n  chinese: {\n    search: 'ÊêúÂ∞ã',\n    flag: 'üá≠üá∞'\n  },\n  hungarian: {\n    search: 'Keres√©s',\n    flag: ' üá≠üá∫'\n  }\n};\n\nfunction Navbar(props) {\n  const {\n    classes\n  } = props;\n  const {\n    language\n  } = useContext(LanguageContext);\n  const {\n    isDarkMode,\n    toggleTheme\n  } = useContext(ThemeContext);\n  const {\n    search,\n    flag\n  } = content[language];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    color: isDarkMode ? 'default' : 'primary',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    className: classes.menuButton,\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"English\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, flag)), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h6\",\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"App Title\"), /*#__PURE__*/React.createElement(Switch, {\n    onChange: toggleTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.grow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.searchIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(InputBase, {\n    placeholder: `${search}...`,\n    classes: {\n      root: classes.inputRoot,\n      input: classes.inputInput\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default withStyles(styles)(Navbar);","map":{"version":3,"sources":["/Users/win/modern-react-bootcamp/section-34-context-intro/src/Navbar.js"],"names":["React","useContext","AppBar","Toolbar","IconButton","Typography","InputBase","SearchIcon","Switch","withStyles","styles","ThemeContext","LanguageContext","content","english","search","flag","chinese","hungarian","Navbar","props","classes","language","isDarkMode","toggleTheme","root","menuButton","title","grow","searchIcon","inputRoot","input","inputInput"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Switch from '@material-ui/core/Switch';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport styles from './styles/NavbarStyles';\nimport { ThemeContext } from './contexts/ThemeContext';\nimport { LanguageContext } from './contexts/LanguageContext';\n\nconst content = {\n  english: {\n    search: 'Search',\n    flag: 'üá¨üáß'\n  },\n  chinese: {\n    search: 'ÊêúÂ∞ã',\n    flag: 'üá≠üá∞'\n  },\n  hungarian: {\n    search: 'Keres√©s',\n    flag: ' üá≠üá∫'\n  },\n}\n\nfunction Navbar (props) {\n  const { classes } = props;\n  const { language } = useContext(LanguageContext);\n  const { isDarkMode, toggleTheme } = useContext(ThemeContext);\n  const { search, flag } = content[language];\n\n  return (\n    <div className={classes.root}>\n      <AppBar position='static' color={isDarkMode ? 'default' : 'primary'}>\n        <Toolbar>\n          <IconButton className={classes.menuButton} color='inherit'>\n            <span role='img' aria-label='English'>{flag}</span>\n          </IconButton>\n          <Typography className={classes.title} variant='h6' color='inherit'>\n            App Title\n          </Typography>\n          <Switch onChange={toggleTheme}/>\n          <div className={classes.grow}/>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon/>\n            </div>\n            <InputBase placeholder={`${search}...`} classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput\n            }}/>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default withStyles(styles)(Navbar);"]},"metadata":{},"sourceType":"module"}