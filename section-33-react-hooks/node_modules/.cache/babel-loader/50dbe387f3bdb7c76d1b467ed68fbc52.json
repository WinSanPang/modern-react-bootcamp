{"ast":null,"code":"var _jsxFileName = \"/Users/win/modern-react-bootcamp/section-33-react-hooks/src/ToDo.js\";\nimport React, { useContext } from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteRounded from '@material-ui/icons/DeleteRounded';\nimport EditIcon from '@material-ui/icons/Edit';\nimport EditToDoForm from './EditToDoForm';\nimport useToggleState from './hooks/useToggleState';\nimport { ToDosContext } from './contexts/toDosContext';\n\nfunction ToDo({\n  id,\n  task,\n  completed\n}) {\n  const [isEditing, toggleIsEditing] = useToggleState();\n  const {\n    removeToDo,\n    toggleToDo\n  } = useContext(ToDosContext);\n  return /*#__PURE__*/React.createElement(ListItem, {\n    style: {\n      height: \"64px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, isEditing ? /*#__PURE__*/React.createElement(EditToDoForm, {\n    id: id,\n    task: task,\n    toggleIsEditing: toggleIsEditing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: completed,\n    tabIndex: -1,\n    onClick: () => toggleToDo(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ListItemText, {\n    style: {\n      textDecoration: completed ? 'line-through' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, task), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"Delete\",\n    onClick: () => removeToDo(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DeleteRounded, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"Edit\",\n    onClick: toggleIsEditing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  })))));\n}\n\nexport default ToDo;","map":{"version":3,"sources":["/Users/win/modern-react-bootcamp/section-33-react-hooks/src/ToDo.js"],"names":["React","useContext","ListItem","ListItemText","ListItemSecondaryAction","Checkbox","IconButton","DeleteRounded","EditIcon","EditToDoForm","useToggleState","ToDosContext","ToDo","id","task","completed","isEditing","toggleIsEditing","removeToDo","toggleToDo","height","textDecoration"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,uBAAP,MAAoC,2CAApC;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,SAASC,YAAT,QAA6B,yBAA7B;;AAEA,SAASC,IAAT,CAAe;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,IAAN;AAAYC,EAAAA;AAAZ,CAAf,EAAuC;AACrC,QAAM,CAACC,SAAD,EAAYC,eAAZ,IAA+BP,cAAc,EAAnD;AACA,QAAM;AAAEQ,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA6BlB,UAAU,CAACU,YAAD,CAA7C;AAEA,sBACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAES,MAAAA,MAAM,EAAE;AAAV,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,SAAS,gBACR,oBAAC,YAAD;AACE,IAAA,EAAE,EAAEH,EADN;AAEE,IAAA,IAAI,EAAEC,IAFR;AAGE,IAAA,eAAe,EAAEG,eAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,gBAMR,uDACE,oBAAC,QAAD;AACE,IAAA,OAAO,EAAEF,SADX;AAEE,IAAA,QAAQ,EAAE,CAAC,CAFb;AAGE,IAAA,OAAO,EAAE,MAAMI,UAAU,CAACN,EAAD,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAKE,oBAAC,YAAD;AACE,IAAA,KAAK,EAAE;AAACQ,MAAAA,cAAc,EAAEN,SAAS,GAAG,cAAH,GAAoB;AAA9C,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGD,IAFH,CALF,eASE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,kBAAW,QAAvB;AAAgC,IAAA,OAAO,EAAE,MAAMI,UAAU,CAACL,EAAD,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,UAAD;AAAY,kBAAW,MAAvB;AAA8B,IAAA,OAAO,EAAEI,eAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CATF,CAPJ,CADF;AA6BD;;AAED,eAAeL,IAAf","sourcesContent":["import React, { useContext } from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteRounded from '@material-ui/icons/DeleteRounded';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport EditToDoForm from './EditToDoForm';\nimport useToggleState from './hooks/useToggleState';\nimport { ToDosContext } from './contexts/toDosContext';\n\nfunction ToDo( { id, task, completed }){\n  const [isEditing, toggleIsEditing] = useToggleState();\n  const { removeToDo, toggleToDo } = useContext(ToDosContext);\n\n  return (\n    <ListItem style={{ height: \"64px\" }}>\n      {isEditing ? ( \n        <EditToDoForm \n          id={id} \n          task={task} \n          toggleIsEditing={toggleIsEditing}/> \n      ) : (\n        <>\n          <Checkbox \n            checked={completed} \n            tabIndex={-1} \n            onClick={() => toggleToDo(id)}/>\n          <ListItemText \n            style={{textDecoration: completed ? 'line-through' : 'none'}}>\n            {task}\n          </ListItemText>\n          <ListItemSecondaryAction>\n            <IconButton aria-label='Delete' onClick={() => removeToDo(id)}>\n              <DeleteRounded/>\n            </IconButton>\n            <IconButton aria-label='Edit' onClick={toggleIsEditing}>\n              <EditIcon/>\n            </IconButton>\n          </ListItemSecondaryAction>\n        </>\n     )}\n    </ListItem>\n  );\n}\n\nexport default ToDo;"]},"metadata":{},"sourceType":"module"}