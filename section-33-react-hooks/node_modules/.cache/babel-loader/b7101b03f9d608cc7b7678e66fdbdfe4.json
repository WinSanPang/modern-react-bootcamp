{"ast":null,"code":"import uuid from 'uuid/dist/v4';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD':\n      return [...state, {\n        id: uuid(),\n        task: action.task,\n        completed: false\n      }];\n\n    case 'REMOVE':\n      return state.filter(toDo => toDo.id !== action.id);\n\n    case 'TOGGLE':\n      return state.map(toDo => toDo.id === action.id ? { ...toDo,\n        completed: !toDo.completed\n      } : toDo);\n\n    case 'EDIT':\n      return state.map(toDo => toDo.id === action.id ? { ...toDo,\n        task: action.newTask\n      } : toDo);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/win/modern-react-bootcamp/section-33-react-hooks/src/reducers/toDoReducer.js"],"names":["uuid","reducer","state","action","type","id","task","completed","filter","toDo","map","newTask"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,cAAjB;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,KAAL;AACE,aAAO,CAAC,GAAGF,KAAJ,EAAW;AAACG,QAAAA,EAAE,EAAEL,IAAI,EAAT;AAAaM,QAAAA,IAAI,EAAEH,MAAM,CAACG,IAA1B;AAAgCC,QAAAA,SAAS,EAAE;AAA3C,OAAX,CAAP;;AACF,SAAK,QAAL;AACE,aAAOL,KAAK,CAACM,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYF,MAAM,CAACE,EAAxC,CAAP;;AACF,SAAK,QAAL;AACE,aAAOH,KAAK,CAACQ,GAAN,CAAUD,IAAI,IACnBA,IAAI,CAACJ,EAAL,KAAYF,MAAM,CAACE,EAAnB,GAAwB,EAAC,GAAGI,IAAJ;AAAUF,QAAAA,SAAS,EAAE,CAACE,IAAI,CAACF;AAA3B,OAAxB,GAAgEE,IAD3D,CAAP;;AAGF,SAAK,MAAL;AACE,aAAOP,KAAK,CAACQ,GAAN,CAAUD,IAAI,IACnBA,IAAI,CAACJ,EAAL,KAAYF,MAAM,CAACE,EAAnB,GAAwB,EAAC,GAAGI,IAAJ;AAAUH,QAAAA,IAAI,EAAEH,MAAM,CAACQ;AAAvB,OAAxB,GAA0DF,IADrD,CAAP;;AAGF;AACE,aAAOP,KAAP;AAdJ;AAgBD,CAjBD;;AAmBA,eAAeD,OAAf","sourcesContent":["import uuid from 'uuid/dist/v4';\n\nconst reducer = (state, action) => {\n  switch(action.type){\n    case 'ADD':\n      return [...state, {id: uuid(), task: action.task, completed: false}];\n    case 'REMOVE':\n      return state.filter(toDo => toDo.id !== action.id);\n    case 'TOGGLE':\n      return state.map(toDo =>\n        toDo.id === action.id ? {...toDo, completed: !toDo.completed} : toDo\n      );\n    case 'EDIT':\n      return state.map(toDo =>\n        toDo.id === action.id ? {...toDo, task: action.newTask} : toDo\n      );\n    default:\n      return state;\n  }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}