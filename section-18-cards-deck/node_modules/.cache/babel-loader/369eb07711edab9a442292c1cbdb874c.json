{"ast":null,"code":"var _jsxFileName = \"/Users/win/modern-react-bootcamp/section-18-cards-deck/src/Deck.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './Deck.css';\nimport Card from './Card';\nconst API_BASE_URL = 'https://deckofcardsapi.com/api/deck/';\n\nclass Deck extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      deck: null,\n      drawnCard: []\n    };\n\n    this.drawCardHandler = async () => {\n      let id = this.state.deck.deck_id;\n\n      try {\n        let cardUrl = `${API_BASE_URL}${id}/draw/`;\n        let cardRes = await axios.get(cardUrl);\n\n        if (!cardRes.data.success) {\n          throw new Error(\"No cards left!\");\n        }\n\n        let card = cardRes.data.cards[0];\n        this.setState(st => ({\n          drawnCard: [...st.drawnCard, {\n            id: card.code,\n            image: card.image,\n            name: `${card.value} of ${card.suit}`\n          }]\n        }));\n      } catch (err) {\n        alert(err);\n      }\n    };\n\n    this.refreshDeckHandler = async () => {\n      let newDeck = await axios.get(`${API_BASE_URL}new/shuffle/`);\n      this.setState({\n        deck: null\n      });\n      this.setState({\n        deck: newDeck\n      });\n      console.log(newDeck);\n    };\n  }\n\n  async componentDidMount() {\n    let deck = await axios.get(`${API_BASE_URL}new/shuffle/`);\n    this.setState({\n      deck: deck.data\n    });\n  }\n\n  render() {\n    const cards = this.state.drawnCard.map(c => /*#__PURE__*/React.createElement(Card, {\n      key: c.id,\n      name: c.name,\n      image: c.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Deck\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"Deck-Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, \"\\u2666 Card Dealer \\u2666\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"Deck-Button\",\n      onClick: this.drawCardHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, \"Draw a Card\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Deck-Cards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, cards), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"Deck-Button\",\n      onClick: this.refreshDeckHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, \"Get a New Deck!\"));\n  }\n\n}\n\nexport default Deck;","map":{"version":3,"sources":["/Users/win/modern-react-bootcamp/section-18-cards-deck/src/Deck.js"],"names":["React","Component","axios","Card","API_BASE_URL","Deck","state","deck","drawnCard","drawCardHandler","id","deck_id","cardUrl","cardRes","get","data","success","Error","card","cards","setState","st","code","image","name","value","suit","err","alert","refreshDeckHandler","newDeck","console","log","componentDidMount","render","map","c"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport './Deck.css';\nimport Card from './Card';\n\nconst API_BASE_URL = 'https://deckofcardsapi.com/api/deck/';\n\nclass Deck extends Component {\n  state = {\n    deck: null,\n    drawnCard: [],\n  }\n\n  async componentDidMount(){\n    let deck = await axios.get(`${API_BASE_URL}new/shuffle/`);\n      this.setState({deck: deck.data});\n  }\n\n  drawCardHandler = async () => {\n    let id = this.state.deck.deck_id;\n    try {\n      let cardUrl = `${API_BASE_URL}${id}/draw/`;\n      let cardRes = await axios.get(cardUrl);\n      if(!cardRes.data.success) {\n        throw new Error(\"No cards left!\")\n      }\n      let card = cardRes.data.cards[0];\n       this.setState(st => ({\n        drawnCard: [\n          ...st.drawnCard, \n          {\n            id: card.code, \n            image: card.image, \n            name: `${card.value} of ${card.suit}`\n          }\n      ]\n    }));\n  } catch (err) {\n    alert(err);\n  }\n}\n    \n refreshDeckHandler = async () => {\n  let newDeck = await axios.get(`${API_BASE_URL}new/shuffle/`);\n      this.setState({deck: null});\n      this.setState({deck: newDeck});\n      console.log(newDeck)\n  }  \n\n  render(){\n    const cards = this.state.drawnCard.map(c => (\n      <Card key={c.id} name={c.name} image={c.image}/>\n    ));\n\n    return (\n      <div className='Deck'>\n        <h1 className='Deck-Title'>♦ Card Dealer ♦</h1>\n        <button className='Deck-Button' onClick={this.drawCardHandler}>Draw a Card</button>\n        <div className='Deck-Cards'>\n          {cards}\n        </div>\n        <button className='Deck-Button' onClick={this.refreshDeckHandler}>Get a New Deck!</button>\n      </div>\n    )\n  }\n}\n\nexport default Deck;"]},"metadata":{},"sourceType":"module"}